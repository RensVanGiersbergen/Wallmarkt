# Debug docker-compose file
version: "3"
services:
  #API gateway with Krakend
  krakend:
    container_name: krakend-gateway
    build:
      context: /services/gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - INFLUX_HOST=${INFLUX_HOST}
      - INFLUX_PORT=${INFLUX_PORT}
      - INFLUX_USER=${INFLUX_USER}
      - INFLUX_USER_PASSWORD=${INFLUX_USER_PASSWORD}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}

  # Grafana dashboard to monitor the gateway
  grafana:
    container_name: grafana
    build:
      context: /services/gateway/monitoring/grafana
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    environment:
      - GF_LOG_LEVEL=debug
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - INFLUX_HOST=${INFLUX_HOST}
      - INFLUX_PORT=${INFLUX_PORT}
      - INFLUX_USER=${INFLUX_USER}
      - INFLUX_USER_PASSWORD=${INFLUX_USER_PASSWORD}

  # InfluxDB for storing telementric data of the gateway
  influxdb:
    container_name: influxdb
    image: influxdb:1.8.10
    environment:
      - "INFLUXDB_DB=krakend"
      - "INFLUXDB_USER=${INFLUX_USER}"
      - "INFLUXDB_USER_PASSWORD=${INFLUX_USER_PASSWORD}"
      - "INFLUXDB_ADMIN_USER=${INFLUX_ADMIN_USER}"
      - "INFLUXDB_ADMIN_PASSWORD=${INFLUX_ADMIN_PASSWORD}"
    ports:
      - "8086:8086"

  # MongoDB + Seeder for development and testing purposes
  mongodb:
    container_name: mongo-developement
    image: mongo:latest
    ports:
      - "${MONGO_PORT}"

  mongo-seeder:
    build:
      context: ./mongo-seeder
      dockerfile: Dockerfile
    depends_on:
      - mongodb

  #microservices

  #Product service
  product:
    container_name: product-service
    depends_on:
      - mongodb
    build:
      context: /services/product
      dockerfile: Dockerfile
    ports:
      - "${PRODUCT_PORT}:${PRODUCT_PORT}"
    environment:
      - MONGO_URI=${MONGO_URI}
      - PORT=${PRODUCT_PORT}

  #Product service
  order:
    container_name: order-service
    depends_on:
      - mongodb
    build:
      context: /services/order
      dockerfile: Dockerfile
    ports:
      - "${ORDER_PORT}:${ORDER_PORT}"
    environment:
      - MONGO_URI=${MONGO_URI}
      - PORT=${ORDER_PORT}
